<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="250" height="600" xmlns:views="edu.isi.bmkeg.neuart.atlasbrowser.views.*"  verticalScrollPolicy="off" horizontalScrollPolicy="off">

	<mx:Script>
		<![CDATA[
			import edu.isi.bmkeg.neuart.atlasbrowser.events.AtlasEvent;
			import edu.isi.bmkeg.neuart.atlasbrowser.views.models.Atlases;
			import edu.isi.bmkeg.neuart.atlasservice.AtlasPlate;
			import edu.isi.bmkeg.neuart.atlasservice.AtlasStructure;
			
			import mx.controls.Alert;
			import mx.events.CollectionEvent;
			import mx.events.CollectionEventKind;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			private var _window:AtlasChooser;
			
			public static const CLICK_OPEN_ATLAS:String = "clickOpenAtlas";
			public static const CLICK_CLOSE_ATLAS:String = "clickCloseAtlas";
			
			/**
			 * Atlases to be included in this control. Atlases issues 
			 * AtlasEvent.ADD_ATLAS and AtlasEvent.REMOVE_ATLAS event
			 */
			private var _openAtlases:Atlases;
			
			public function get openAtlases():Atlases {
				return _openAtlases;
			}
			
			public function set openAtlases(atlases:Atlases):void {
				if (_openAtlases != null) {	
					_openAtlases.removeEventListener(CollectionEvent.COLLECTION_CHANGE, openatlases_changeHandler,false);
				}
				_openAtlases = atlases;
				if (_openAtlases != null) {
					_openAtlases.addEventListener(CollectionEvent.COLLECTION_CHANGE,openatlases_changeHandler,false,0,true);					
				}
			}
			
			/**
			 * Handles openAtlases Collection changing events. It adds/removes as a child of this component 
			 * an AtlasCoronalPlateSelector component
			 * connected to the added atlas.
			 */
			protected function openatlases_changeHandler(event:CollectionEvent):void {
				if (event.kind == CollectionEventKind.ADD) {
					if (event.items.length != 1)
						throw new IllegalOperationError("Can't handle other than a single item add");
					var atlas:AtlasStructure = event.items[0] as AtlasStructure;
					if (atlas == null) 
						throw new IllegalOperationError("Can't handle other than AtlasStructure additions");

					var atlasPlateSelector:AtlasCoronalPlateSelector = new AtlasCoronalPlateSelector();
					atlasPlateSelector.atlas = atlas;
					openAtlasesNav.addChild(atlasPlateSelector);
					atlasPlateSelector.percentHeight = 100;
					atlasPlateSelector.percentWidth = 100;
					atlasPlateSelector.addEventListener(AtlasEvent.ATLAS_PLATE_CLICK,
						atlasPalteSelector_atlasPlateClickHandler);
					openAtlasesNav.selectedChild = atlasPlateSelector;
				} else if  (event.kind == CollectionEventKind.REMOVE) {
					//TODO implement						
				}				
			}

			protected function atlasPalteSelector_atlasPlateClickHandler(event:AtlasEvent):void {
				var newEvent:AtlasEvent = event.clone() as AtlasEvent;
				dispatchEvent(newEvent);
			}
						
			protected function openAtlasButton_clickHandler(event:MouseEvent):void
			{
				var addEvent:Event = new Event(CLICK_OPEN_ATLAS);
				dispatchEvent(addEvent);
			}

			protected function closeAtlasButton_clickHandler(event:MouseEvent):void
			{
				var removeEvent:Event = new Event(CLICK_CLOSE_ATLAS);
				dispatchEvent(removeEvent);
			}

		]]>
	</mx:Script>

	<mx:Metadata>
		[Event(name="clickOpenAtlas",type="flash.events.Event")]
		[Event(name="clickCloseAtlas",type="flash.events.Event")]
		[Event(name="atlasPlateClick",type="edu.isi.bmkeg.neuart.atlasbrowser.events.AtlasEvent")]
	</mx:Metadata>
	<mx:Label text="Loaded Atlases" top="4" horizontalCenter="0" fontWeight="bold" fontStyle="normal" textDecoration="none"/>
	<mx:Button label="+" id="openAtlasButton" width="32" left="10" bottom="5" 
			   click="openAtlasButton_clickHandler(event)" height="22"
			   toolTip="Open Atlas"/>
	<mx:Button label="-" id="closeAtlasButton" width="32" left="50" bottom="5"
			   click="closeAtlasButton_clickHandler(event)" height="22"
			   toolTip="Close Atlas"/>
	
	<mx:Accordion top="23" left="10" id="openAtlasesNav" bottom="30" textAlign="center" resizeToContent="false" width="230">
	</mx:Accordion>
	
</mx:Canvas>
